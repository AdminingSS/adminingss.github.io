Vue.use(VueResource);

var seatMapSelector = ".map__wrp path.active:not([data-seat='-1']), .map__wrp circle.active:not([data-seat='-1'])";
var seatCircleMapSelector = ".map__wrp circle.active:not([data-seat='-1'])";
var just_added_id = 0;

var updateCartInfo = function() {
    var countAll = cartStore.getters.countAll,
        tickets = cartStore.state.tickets,
        alla_green,
        alla_purple,
        alla_more,
        is_tickets = false;

    if (window.eventData) {
        var present = tickets[eventData.seance_id];
        if (present && present.sector == 'present') {
            $('.present input').val(present.count);
            $('.pres_row div').html('(' + present.count + ')');
            $('.pres_row').addClass('active');
        } else {
            $('.present input').val(0);
            $('.pres_row').removeClass('active');
        }
    }

    $(seatMapSelector).removeClass('sel');
    $('.map__wrp [data-text]').hide();
    $('.map__wrp [data-path]').hide();
    $(seatCircleMapSelector).attr('r', 2.5);
    $('.map__list .tickets__checkbox input').prop('checked', false);
    $('.rowMultiple .cart-control__qty').text(0);

    Object.values(tickets).forEach(function(em) {
        // Если есть билеты
        if (em.event_location != 'certificate') {
            is_tickets = true;
        }
 
        if (!em.is_multipled) {
            $('.tickets__checkbox input[data-id='+ em.carryall_id +']').prop('checked', true);
            var mapEm = $('.map_content [data-id=' + em.carryall_id + ']');
            if (!mapEm.length) return;

            // Выбор места
            if (!IS_CANVAS) mapEm.addClass('sel');

            if (mapEm[0].tagName == 'circle') {
                mapEm.attr('r', 5);
                if (window.hoveredNumber) {
                    hoveredNumber(mapEm.data("id"), mapEm.data("seat"), mapEm.data("c"), parseInt(mapEm.attr('cx')), parseInt(mapEm.attr('cy')), mapEm.attr('transform'));
                }
            }
        } else {
            $('.rowMultiple[data-id="'+em.carryall_id+'"]').find('.cart-control__qty').text( em.count );
        }

        if ( window.is_tooltip && isTouchDevice() ) {
            $('.map__wrp svg').find('text[data-text="' + em.carryall_id + '"]').hide();
            $('.map__wrp svg').find('path[data-path="' + em.carryall_id + '"]').show();
        } else
            $('.map__wrp svg').find('text[data-text="' + em.carryall_id + '"]').show();
    });

    $('.new_header__counter, .header__counter, .new_header__cart span, .map__badge, .l_header__counter').html(countAll);
    if ( countAll == 0 ) {
        $('.cart').removeClass('active');
        $('.cart_empty ').addClass('active');
        $('.header__counter').hide();
        $('.cart-popup').addClass('empty');
        $('.new_cart ').removeClass('active');
        $('.map__cart').removeClass('active');
        $('.bottom_cart').removeClass('active');
        $('.cart-popup').removeClass('active-mobile');
    } else {
        $('.cart ').addClass('active');
        $('.cart_empty ').removeClass('active');
        $('.header__counter').show();
        $('.cart-popup').removeClass('empty');
        $('.new_cart ').addClass('active');
        $('.bottom_cart').addClass('active');
        
        if ($("#map").length) {
            $('.map__cart').addClass('active');
        }
    }

    // Алла пугачева
    if ($(".bottom_cart__alert_row").length) {
        $(".bottom_cart__alert_row-green, .bottom_cart__alert_row-purple, .bottom_cart__alert_row-more").removeClass("active");
    }

    if ($(".nano").length) {
        setTimeout(function () {
            $(".nano").nanoScroller();
        }, 100);
    }

    cartTimer(is_tickets);
};

var handleReduxCart = function(cart) {
    var ticket_ids = Object.keys(cart);
    ticket_ids.forEach(function(em){
        /*var mapEm = $('.map__wrp [data-id=' + em + ']');
        if ( mapEm.length == 0 || mapEm.data('seat') != -1)
            return; */

        var ticketinCart = cartStore.state.tickets[em];
        if ( ticketinCart && ticketinCart.count == cart[em].amount )
            return;
        cartStore.dispatch('addToCart', {ticket: createTicketData(cart[em], cart[em].amount, true) });
    });
};

var upsertMultiTicket = function( $row, direction ) {
    var qty = parseInt($row.find('.cart-control__qty').first().text());
    var limit = parseInt($row.find('.row__count').text());

    if (qty==0 && direction == -1) {
        return;
    }
    if (qty==limit && direction == 1) {
        return;
    }

    var seatData = $row.data('seat');

    cartStore.dispatch('addToCart', { ticket: createTicketData(seatData, (qty + direction), true)});
};

var upsertPresent = function( $row, direction ) {
    var val = ~~$row.find('input').val();

    if (val==0 && direction == -1) {
        return;
    }

    if (val < 0) {
        $row.find('input').val(0);
        return;
    }

    $row.find('input').val(val + direction);

    var presData = $row.data();
    presData.sn = 'present';

    cartStore.dispatch('addToCart', {ticket: createTicketData(presData, (val + direction), true) } );

};

var getPriceMargin = function(price) {
    if (!window.eventData || !window.eventData.margins)
        return 0;
    for(var i=eventData.margins.length-1; i >= 0 ; i--) {
        var item = eventData.margins[i];
        if (price >= item[0])
            return item[1];
    }
};

var createTicketData = function(data, count, is_multipled) {
        count = typeof count !== 'undefined' ?  count : 1;
        is_multipled = typeof is_multipled !== 'undefined' ?  is_multipled : false;
        just_added_id--;

        if (is_multipled) {
            seat = data.qty;
        } else if (typeof data.seat !== 'undefined') {
            seat = data.seat;
        } else if (typeof data.s !== 'undefined') {
            seat = data.s;
        } else {
            seat = -1;
        }
        
        var now = new Date(),
            deadline = new Date(now.setMinutes(now.getMinutes() + 30)),
            ticketData = {
                'carryall_id': data.id,
                'group_ids': [data.id],
                'sector': data.sector_name || data.sn,
                'row': is_multipled ? -1 : data.row || data.r || -1,
                'seat': seat,
                'price': data.price || data.p,
                'src_price': data.price || data.p,
                'predict_purchase': data.pp, // parsed_price
                'n_price': data.n_price || data.np || data.p || data.price,
                'created_at': deadline.toISOString(),
                'event_title': eventData.event_title + (data.title ? ' '+data.title : ''),
                'event_type': eventData.event_type,
                'event_location': eventData.event_location,
                'event_place': eventData.event_place,
                'event_date': eventData.event_date,
                'event_photo': eventData.event_photo,
                'seance_id': eventData.seance_id,
                'currency': eventData.currency,
                'count': count,
                'is_multipled': is_multipled,
                'basket_uuid': cartStore.state.cartId,
                'event_id': event_id,
                'event_slug': event_slug,
                'fee': data.fee ? data.fee : 0,
                'd_id': eventData.doorway_id ? eventData.doorway_id : 0,
                'profit': data.pro || data.profit,
                'just_added': just_added_id,
                'podcast': window.eventData.podcast
            };

        ticketData.margin = 1; //getPriceMargin(ticketData.price);

        return ticketData;
};

var onDeleteTicket = function(id) {
    if (id.toString().indexOf('podcast') != -1) {
        $(".podcast_button").removeClass("active");
    }

    if (window.hasOwnProperty('store')) {
        var state = store.getState();
        var reduxCart = state['reduxCart'];
        var ticket = reduxCart.hasOwnProperty(id) ? reduxCart[id] : null;
        if (ticket) {
            store.dispatch(changeQuantityIfPossible(ticket, 0));
            return true;
        }
    }
    return false;
}

var createPodcastData = function(id, title, price, currency, image, info) {
    var now = new Date(),
        podcast_date = new Date(now.setFullYear(now.getFullYear() + 1));

    return {
        'carryall_id': "podcast" + id,
        'group_ids': ["podcast" + id],
        'sector': "podcast",
        'row':  -1,
        'seat': -1,
        'price': price,
        'src_price': price,
        'n_price': price,
        'created_at': new Date().toISOString(),
        'event_title': title,
        'event_location': info,
        'event_date': podcast_date,
        'event_photo': image,
        'currency': currency,
        'count': 1,
        'is_multipled': true,
        'basket_uuid': cartStore.state.cartId,
        'event_id': 0,
        'fee': 0,
        'margin': 1
    }
}

cartStore.subscribe( function(mutation, state) {
    if (mutation.type == 'set' && mutation.payload.type == 'tickets') {
        updateCartInfo();
        var maxDeadline = Object.values(state.tickets).length == 0 ? 0 : Math.max.apply(Math, Object.values(state.tickets).map(function(em) { return em.deadline_at; }));
        cartStore.commit('set', { type: 'deadline', value: maxDeadline });
    }
});

var commonMixin = {
    store: cartStore,
    computed: {
        isEmpty: function() {
            return Object.keys(this.$store.state.tickets).length == 0;
        },

        tickets: function() {
            return this.$store.state.tickets;
        },

        ticketsBundle: function() {
            return this.$store.getters.ticketsBundle;
        },

        groupTickets: function() {
            var key='seance_id';
            
            return Object.values(this.$store.state.tickets).reduce(function(rv, x) {
                (rv[x[key]] = rv[x[key]] || []).push(x);
                return rv;
              }, {});
        },

        podcast: function() {
            var podcast,
                podcast_in_cart = false;

            Object.values(this.$store.state.tickets).forEach(function(em){
                if (em.carryall_id.toString().indexOf('podcast') != -1) {
                    podcast_in_cart = true;
                }
                
                if (typeof em.podcast !== 'undefined' && Object.keys(em.podcast).length != 0) {
                    podcast = em.podcast;
                }
            });

            if (podcast_in_cart) return;

            return podcast;
        },

        hasPresent: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return !!tickets.find(function(em) {
              return em.sector=='present';
            });
        },

        pluralTicket: function() {
            return function(num) {
                return declOfNum(num, [trans.ticket, trans.ticket_, trans.tickets])
            }
        },

        pluralCert: function() {
            return function(num) {
                return declOfNum(num, [trans.cert, trans.cert_, trans.cert])
            }
        },

        totalPrice: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return tickets.reduce(function(sum, current) {
              return sum + current.price*current.count;
            }, 0);
        },

        totalTicketPrice: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return tickets.reduce(function(sum, current) {
              return sum + ( current.sector=='present' || current.event_location.indexOf('certificate') != -1 ? 0 : current.price*current.count );
            }, 0);
        },

        totalTicketPrice: function() {
            return this.totalPrice - this.totalTicketPrice;
        },

        totalPriceFee: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return tickets.reduce(function(sum, current) {
              return sum + current.price * current.count + current.price * current.count * ~~current.fee / 100;
            }, 0);
        },

        totalFee: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return tickets.reduce(function(sum, current) {
              return sum + current.price * current.count * current.fee / 100;
            }, 0);
        },

        totalNominalPrice: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return tickets.reduce(function(sum, current) {
              return sum + current.n_price * current.count;
            }, 0);
        },

        totalServicesPrice: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return tickets.reduce(function(sum, current) {
              return sum + ((current.price - current.n_price) * current.count);
            }, 0);
        },

        currency: function() {
            var ticket = Object.values(this.$store.state.tickets)[0];
            if (!ticket) return '';
            return ticket.currency;
        },

        countTickets: function() {
            return this.$store.getters.countTickets;
        },

        countAll: function() {
            return this.$store.getters.countAll;
        },

        countCert: function() {
            return this.$store.getters.countAll - this.$store.getters.countTickets;
        },

        eventTime: function() {
            return function(date) {
                if (!date) return '';
                return moment.parseZone(date).format('HH:mm');
            }
        },

        eventDay: function() {
            return function(date) {
                if (!date) return '';
                return moment.parseZone(date).format('DD.MM');
            }
        },

        formatDate: function() {
            return function(date) {
                if (!date) return '';
                var lng = window.LANG_CODE || 'en';
                return moment.parseZone(date).locale(lng).format('D MMMM - HH:mm');
            }
        },

        formatWeekday: function() {
            return function(date) {
                if (!date) return '';
                var lng = window.LANG_CODE || 'en';
                return moment.parseZone(date).locale(lng).format('dddd');
            }
        },

        formatDay: function() {
            return function(date) {
                if (!date) return '';
                var lng = window.LANG_CODE || 'en';
                return moment.parseZone(date).locale(lng).format('DD');
            }
        },

        formatMonth: function() {
            return function(date) {
                if (!date) return '';
                var lng = window.LANG_CODE || 'en';
                return moment.parseZone(date).locale(lng).format('MMMM');
            }
        },

        isCode: function() {
            var tickets = Object.values(this.$store.state.tickets);
            return tickets.reduce(function(sum, current) {
                if (!current.src_pric)
                    return false;
                return current.price != current.src_price;
            }, 0);
        },

        isTicket: function() {
            return function(ticket) {
                return ticket.sector!='present' && ticket.event_location.indexOf('certificate') == -1
            }
        },

        isCert: function() {
            return function(ticket) {
                return ticket.event_location.indexOf('certificate') != -1
            }
        },

        enablePresent: function() {
            var tickets = Object.values(this.$store.state.tickets),
                seanceId = window.eventData.seance_id ? parseInt(window.eventData.seance_id) : 0;
            
            return tickets.reduce(function(sum, current) {
                return current.seance_id == seanceId
            }, 0);
        },

        certType: function() {
            return function(ticket) {
                return ticket.info.indexOf('Электронный') != -1 ? "electron" : "paper"
            }
        },
    },

    methods: {
        initTickets: function() {
            this.$store.dispatch('getCartId');
            if (this.$store.state.cartId)
                this.$store.dispatch('getTickets', window.initState);
            else {
                updateCartInfo();
                if (window.initState) initState();
            }
        },

        deleteTicket: function(ticket) {
            if (ticket.is_multipled)
                onDeleteTicket(ticket.carryall_id);
            var self = this;

            if (ticket.group_ids) {
                var ids = ticket.group_ids;
                ids.forEach(function(em){
                    self.$store.dispatch('deleteFromCart', em);
                });
            }
        },

        upsertTicket: function( ticket, direction ) {
            if (!ticket.is_multipled)
                return;

            if (ticket.count == 0 && direction == -1) {
                return;
            }

            if (ticket.count == ticket.seat && direction == 1) {
                return;
            }

            ticket.count += direction;

            cartStore.dispatch('addToCart', { ticket: ticket});
        },

        clearCart: function() {
            var self = this;
            Object.values(self.$store.state.tickets).forEach(function(em){
                if (em.is_multipled)
                    onDeleteTicket(em.carryall_id);

                if (typeof IS_CANVAS !== 'undefined' && IS_CANVAS) schemeRenderer.unselectPlaceById(em.carryall_id);

                self.$store.dispatch('deleteFromCart', em.carryall_id);
            });
            
            $(seatMapSelector).removeClass("sel");
        },

        cancelCode: function() {
            var self = this;
            
            Object.values(self.$store.state.tickets).forEach(function(em){
                em.price = em.src_price;
                self.$store.dispatch('addToCart', {ticket: em});
            });
        },

        ifCert: function() {
            var surnameWrap = $('#surname').closest('.inp_wrp');

            if ( $('#surname').attr('data-required') ) {
                surnameWrap.addClass('new_cart_form__input-important').addClass('cart_form__input-req');
                $('#surname').attr('required', 'required');
            } else {
                surnameWrap.removeClass('new_cart_form__input-important').removeClass('cart_form__input-req');
                $('#surname').removeAttr('required');
            }
        },

        changeCertType: function(certData) {
            if (certData.info.indexOf('Электронный') != -1) {
                certData.info = certData.info.replace('Электронный', 'Картонный');
            } else {
                certData.info = certData.info.replace('Картонный', 'Электронный');
            }

            cartStore.dispatch('addToCart', { ticket: certData });
        }
    },
    data: function () {
      return {
       formatCurrency: window.formatCurrency
      }
    },
};

var cartSidebar = new Vue({
    el: '#cartSidebar',
    mixins: [commonMixin],

    delimiters: ["<%","%>"],

    created: function(){
        this.initTickets();
    },

});

var cartBottom = new Vue({
    el: '#cartBottom',
    mixins: [commonMixin],
    delimiters: ["<%","%>"],
    computed: {
        counterText: function() {
            var text = [];
            if (this.countTickets > 0)
                text.push(this.countTickets + ' ' + this.pluralTicket(this.countTickets));
            if (this.countCert > 0)
                text.push(this.countCert + ' ' + this.pluralCert(this.countCert));
            return text.join(', ');
        }
    }
});

var cartMain = new Vue({
    el: '#cartMain',
    mixins: [commonMixin],
    delimiters: ["<%","%>"],
    data: {
        deadlineTime: '30:00',
        timer: null,
        showPromo: false
    },

    computed: {
        type: function() {
            var has_tickets = false,
                has_cert = false,
                has_podcast = false,
                has_p_cert = false,
                has_el_cert = false,
                tickets = Object.values(this.$store.state.tickets);
                
            tickets.forEach(function(em) {
                if (em.event_location.indexOf('certificate') != -1) {
                    has_cert = true;

                    if (em.info.indexOf('Картонный') == -1) {
                        has_el_cert = true;
                    } else {
                        has_p_cert = true;
                    } 
                } else if (em.sector.indexOf('podcast') != -1) {
                    has_podcast = true;
                } else {
                    has_tickets = true;
                }
            });
            
            if (has_tickets && has_cert) return 'mixed';
            if (has_p_cert) return 'cert_p';
            if (has_el_cert) return 'cert_el';
            if (has_tickets && has_podcast) return 'standard';
            if (has_podcast) return 'podcast';
            return 'standard';
        },
    },

    watch: {
        type: function (val) {
            var self = this,
                surnameWrap = $('#surname').closest('.inp_wrp');

            $('.pay_wrp > div').hide();

            switch(val) {
                case 'mixed':
                    surnameWrap.addClass('new_cart_form__input-important').addClass('cart_form__input-req');
                    $('#surname').attr('required', 'required');
                    $('.pay_wrp > div').show();
                    break;
                case 'cert_el':
                    self.ifCert();

                    $(".cart_text, .delivery__h3, .delivery__text").hide();
                    $('#payment_2').parent().show();
                    $('#payment_2').prop('checked', true);
                    break;
                case 'cert_p':
                    self.ifCert();

                    $(".cart_text, .delivery__h3, .delivery__text").hide();
                    $('#payment_1, #payment_2').parent().show();
                    break;
                case 'podcast':
                    $('#payment_2').parent().show();
                    $('#payment_2').prop('checked', true);
                    break;
                default:
                    self.ifCert();
   
                    $('.pay_wrp > div').show();
                    break;
            }

            $('#surname').trigger('input');
        }
    },

    mounted: function(){
        $(".cart_loader").remove();
    },
});

var cartSuccess = new Vue({
    el: '#cartSuccess',
    mixins: [commonMixin],
    delimiters: ["<%","%>"]
});

var nervModal = new Vue({
    el: '#nerv_modal',
    mixins: [commonMixin],
    delimiters: ["<%","%>"]
});

var cartPresent = new Vue({
    el: '#cartPresent',
    mixins: [commonMixin],
    delimiters: ["<%","%>"]
});


$(document).ready(function(){

    $("body").on("click", seatMapSelector, function (event) {
        if ( window.is_tooltip && isTouchDevice() ) {
            $(this).trigger('mouseenter', [false, true]);
            return;
        }
        var selection = bundleTickets.setSelection($(this).data());
        var ids = selection.map(function(em){return em.id});
        if ($(this).hasClass("sel")) {
            $(this).removeClass('sel');

            ids.forEach(function(em){
                cartStore.dispatch('deleteFromCart', em);
            });
        }
        else {
            $(this).addClass('sel');
            cartStore.dispatch('addGroupToCart', {tickets: selection, ids: ids});
        }
    });

    $("body").on("change", ".map__list .tickets__checkbox input", function () {
        var selection = bundleTickets.setSelection($(this).data());
        var ids = selection.map(function(em){return em.id});

        if ( $(this).prop('checked') ) {
            cartStore.dispatch('addGroupToCart', {tickets: selection, ids: ids});
        } else {
            ids.forEach(function(em){
                cartStore.dispatch('deleteFromCart', em);
            });
        }
    });

    $("body").on("click", ".map__row_seat label, .map__list .tickets__checkbox input", function (e) {
        e.stopPropagation();
    });

    $("body").on("click", ".map__list .map__row_seat", function () {
        var input = $(this).find('.tickets__checkbox input');
        input.prop( 'checked', !input.prop('checked') ).trigger('change');
    });

    $('body').on('click', '.multipleAdd', function() {
        upsertMultiTicket( $(this).closest('.rowMultiple'), 1 );
    });
    
    $('body').on('click', '.multipleRemove', function() {
        upsertMultiTicket( $(this).closest('.rowMultiple'), -1 );
    });

    $('body').on('click', '.presentAdd', function() {
        upsertPresent( $(this).closest('.present'), 1 );
    });

    $('body').on('click', '.presentRemove', function() {
        upsertPresent( $(this).closest('.present'), -1 );
    });

    $("body").on("click", ".podcast_button", function () {
        $(".podcast_button").addClass("active");
        
        cartStore.dispatch('addToCart', {ticket: createPodcastData($(this).data("id"), $(this).data("title"), $(this).data("price"), $(this).data("currency"), $(this).data("image"), $(this).data("info"))});
    });

});
